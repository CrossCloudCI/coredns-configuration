stages:
  - build
  - package

before_script:
  - export BASE_URL=${BASE_URL:-$(echo $CI_PROJECT_URL |  cut -d'/' -f1-3)}
  - export CI_COMMIT_SHA_SHORT=$(echo ${CI_COMMIT_SHA} | cut -c -8)
  - >
    if [ -z "$CROSS_CLOUD_YML" ]; then
       if [ "$BASE_URL" == "https://gitlab.cncf.ci" ]; then
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/production/cross-cloud.yml"
       elif [ "$BASE_URL" == "https://gitlab.staging.cncf.ci" ]; then
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/staging/cross-cloud.yml"
       elif [ "$BASE_URL" == "https://gitlab.cidev.cncf.ci" ]; then
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/integration/cross-cloud.yml"
       else
          export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/master/cross-cloud.yml"
       fi
    else
      export CROSS_CLOUD_YML="$CROSS_CLOUD_YML"
    fi
  - source /opt/local/etc/rvmrc ; source /opt/local/etc/profile.d/rvm.sh ; cp -a /opt/local/dashboard /dashboard ; pushd /dashboard ; source /opt/local/.env ; ./bin/update_dashboard ; popd

compile:
  image: crosscloudci/debian-go
  stage: build
  script:
    - mkdir -p /go/src/github.com/coredns
    - ln -s $(pwd) /go/src/github.com/coredns
    - cd /go/src/github.com/coredns/coredns
    - GO111MODULE=on go mod download
    - >
      if [ "$ARCH" == "arm64" ]; then
        echo 'ARCH set to arm64'
        make all SYSTEM="GOOS=linux GOARCH=arm64"
      else
        echo 'Default to amd64 (Intel)'
        make all
      fi
    - >
      if [ "$ARCH" == "arm64" ]; then
        echo 'SKIP unit tests for arm64'
      else
        echo 'Running unit tests for amd64'
        if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
          make TEST_TYPE=coverage travis
          make TEST_TYPE=integration travis
          make TEST_TYPE=core travis
          make TEST_TYPE=plugin travis
        else
          make TEST_TYPE=coverage travis || true
          make TEST_TYPE=integration travis || true
          make TEST_TYPE=core travis || true
          make TEST_TYPE=plugin travis || true
        fi
      fi
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 5 weeks
    paths:
      - ./coredns

container:
  image: crosscloudci/debian-docker 
  stage: package
  script:
    - >
      if [ "$ARCH" == "arm64" ]; then
        echo 'ARCH set to arm64'
        export IMAGE_TAG=${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHA_SHORT}.${CI_JOB_ID}.arm64
      else
        echo 'Default to amd64 (Intel)'
        export IMAGE_TAG=${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHA_SHORT}.${CI_JOB_ID}.amd64
      fi
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
    - echo export IMAGE_ARGS=\"--set image.repository=$CI_REGISTRY_IMAGE\" | tee release.env
    - echo export TAG_ARGS=\"--set image.tag=$IMAGE_TAG\" | tee -a release.env

    - cat release.env
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 5 weeks
    paths:
      - release.env
